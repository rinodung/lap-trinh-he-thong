# Example instructions for decoding

.pos 0x100  # Start generating code at address 0x100
#/* $begin y86-decode1-ys */
#/* $begin y86-decode1-yo */
    irmovq $-4,%rbx
    rmmovq %rsi,0x800(%rbx)
    halt
#/* $end y86-decode1-yo */
#/* $end y86-decode1-ys */

.pos 0x200  # Start generating code at address 0x200
#/* $begin y86-decode2-ys */
#/* $begin y86-decode2-yo */
    pushq %rsi
    call proc
    halt
proc:
    irmovq $10,%rbx
    ret
#/* $end y86-decode2-yo */
#/* $end y86-decode2-ys */

.pos 0x300  # Start generating code at address 0x300
#/* $begin y86-decode3-ys */
#/* $begin y86-decode3-yo */
    mrmovq 7(%rsp),%rbp
    nop
.byte 0xf0  # Invalid instruction code
    popq %rcx
#/* $end y86-decode3-yo */
#/* $end y86-decode3-ys */

.pos 0x400  # Start generating code at address 0x400
#/* $begin y86-decode4-ys */
#/* $begin y86-decode4-yo */
loop:
    subq %rcx, %rbx
    je loop
    halt  
#/* $end y86-decode4-yo */
#/* $end y86-decode4-ys */

.pos 0x500  # Start generating code at address 0x500
#/* $begin y86-decode5-ys */
#/* $begin y86-decode5-yo */
    xorq %rsi,%rdx
    .byte 0xa0  # pushq instruction code
    .byte 0xf0  # Invalid register specifier byte
#/* $end y86-decode5-yo */
#/* $end y86-decode5-ys */

